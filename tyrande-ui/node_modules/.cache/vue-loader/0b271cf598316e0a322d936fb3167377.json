{"remainingRequest":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysparams\\sysparams.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysparams\\sysparams.vue","mtime":1597643615000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkZWZhdWx0U2V0dGluZ3MgZnJvbSAnQC9zZXR0aW5ncycKaW1wb3J0IHsKICBkb0FkZFNhdmUsCiAgZG9EZWxldGUsCiAgZG9FZGl0U2F2ZSwKICBkb1ZpZXcsCiAgZ2V0UGFnZUxpc3QKfSBmcm9tICdAL2FwaS9zeXN0ZW0vc3lzcGFyYW1zL1N5c1BhcmFtcycKaW1wb3J0IHsgaXNOdW1iZXJBbmRTZSB9IGZyb20gJ0AvdXRpbHMvdmFsaWRhdGUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1N5c1BhcmFtJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVmYXVsdFNldHRpbmdzOiBkZWZhdWx0U2V0dGluZ3MsCgogICAgICAvLyDmn6Xor6Llj4LmlbDlr7nosaEKICAgICAgc2VhcmNoRm9ybTogewogICAgICAgIGN1cnJlbnQ6IDEsCiAgICAgICAgcGFyYW1OYW1lOiAnJywKICAgICAgICBwYXJhbUVuTmFtZTogJycKICAgICAgfSwKICAgICAgLy8g5YiX6KGo5pWw5o2uCiAgICAgIGdyaWREYXRhOiB7CiAgICAgICAgbGlzdDogW10sCiAgICAgICAgdG90YWw6IDAKICAgICAgfSwKCiAgICAgIC8vIOWvueivneahhuaYr+WQpuWxleekuumFjee9rgogICAgICB2aXNpYmxlQ29uZmlnOiB7CiAgICAgICAgYWRkOiBmYWxzZSwKICAgICAgICBlZGl0OiBmYWxzZSwKICAgICAgICB2aWV3OiBmYWxzZQogICAgICB9LAoKICAgICAgLy8g5re75Yqg5oiW57yW6L6R5a+56K+d5qGG5qCh6aqM6KeE5YiZCiAgICAgIGNoZWNrUnVsZXM6IHsKICAgICAgICBwYXJhbU5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlj4LmlbDkuK3mloflkI0nLCB0cmlnZ2VyOiAnYmx1cicgfSwKICAgICAgICAgIHsgbWluOiAxLCBtYXg6IDIwLCBtZXNzYWdlOiAn6K+36L6T5YWlMS0yMOS4quWtl+espueahOWPguaVsOS4reaWh+WQjScsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBwYXJhbUVuTmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWPguaVsOiLseaWh+WQjScsIHRyaWdnZXI6ICdibHVyJyB9LAogICAgICAgICAgeyBtaW46IDEsIG1heDogNTAsIG1lc3NhZ2U6ICfor7fovpPlhaUxLTUw5Liq5a2X56ym5oiW5pWw5a2XJywgdHJpZ2dlcjogJ2JsdXInIH0sCiAgICAgICAgICB7IHZhbGlkYXRvcjogaXNOdW1iZXJBbmRTZSwgdHJpZ2dlcjogJ2JsdXInIH1dLAogICAgICAgIHBhcmFtVmFsdWU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5Y+C5pWw5YC8JywgdHJpZ2dlcjogJ2JsdXInIH1dLAogICAgICAgIHBhcmFtRGVzYzogW3sgbWF4OiAyMDAsIG1lc3NhZ2U6ICfmj4/ov7DkuI3og73otoXov4cyMDDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnYmx1cicgfV0KICAgICAgfSwKCiAgICAgIC8vIOafpeeci+aVsOaNrgogICAgICB2aWV3Rm9ybToge30sCgogICAgICAvLyDmt7vliqDlr7nor53moYbmlbDmja4KICAgICAgYWRkRm9ybToge30sCgogICAgICAvLyDnvJbovpHlr7nor53moYbmlbDmja4KICAgICAgZWRpdEZvcm06IHt9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJfooajmn6Xor6IKICAgIGdldFBhZ2VMaXN0KCkgewogICAgICBnZXRQYWdlTGlzdCh0aGlzLnNlYXJjaEZvcm0pLnRoZW4oKHJlcykgPT4gewogICAgICAgIGNvbnN0IHsgcmVjb3JkcywgdG90YWwgfSA9IHJlcy5kYXRhCiAgICAgICAgdGhpcy5ncmlkRGF0YS5saXN0ID0gcmVjb3JkcwogICAgICAgIHRoaXMuZ3JpZERhdGEudG90YWwgPSB0b3RhbAogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihkZWZhdWx0U2V0dGluZ3MuZmFpbHVyZVNlYXJjaCkKICAgICAgfSkKICAgIH0sCgogICAgLy8g5YiG6aG15qCP6aG15pWw5pS55Y+Y55uR5ZCsCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKG5ld0N1cnJlbnQpIHsKICAgICAgdGhpcy5zZWFyY2hGb3JtLmN1cnJlbnQgPSBuZXdDdXJyZW50CiAgICAgIHRoaXMuZ2V0UGFnZUxpc3QoKQogICAgfSwKCiAgICAvLyDliKDpmaQKICAgIGRvRGVsZXRlKGlkKSB7CiAgICAgIGNvbnN0IHJvd0lkID0gaWQKICAgICAgdGhpcy4kY29uZmlybShkZWZhdWx0U2V0dGluZ3MuZGVsZXRlVGV4dCwgZGVmYXVsdFNldHRpbmdzLnR5cGVJbmZvVGV4dCwgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiBkZWZhdWx0U2V0dGluZ3MuY29uZmlybUJ1dHRvblRleHQsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogZGVmYXVsdFNldHRpbmdzLmNhbmNlbEJ1dHRvblRleHQsCiAgICAgICAgdHlwZTogZGVmYXVsdFNldHRpbmdzLnR5cGVXYXJuaW5nCiAgICAgIH0pLnRoZW4oCiAgICAgICAgYXN5bmMoKSA9PiB7CiAgICAgICAgICBkb0RlbGV0ZShyb3dJZCkudGhlbigoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhkZWZhdWx0U2V0dGluZ3Muc3VjY2Vzc0RlbGV0ZSkKICAgICAgICAgICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAoKICAgIC8vIOa3u+WKoC3kv53lrZgKICAgIGRvQWRkU2F2ZSgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgYXdhaXQgZG9BZGRTYXZlKHRoaXMuYWRkRm9ybSkKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoZGVmYXVsdFNldHRpbmdzLnN1Y2Nlc3NBZGQpCiAgICAgICAgdGhpcy52aXNpYmxlQ29uZmlnLmFkZCA9IGZhbHNlCiAgICAgICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5re75YqgLeWFs+mXrQogICAgZG9BZGRDbG9zZSgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0sCgogICAgLy8g57yW6L6RCiAgICBhc3luYyBkb0VkaXQoaWQpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZG9WaWV3KGlkKQogICAgICB0aGlzLmVkaXRGb3JtID0gcmVzLmRhdGEKICAgICAgdGhpcy52aXNpYmxlQ29uZmlnLmVkaXQgPSB0cnVlCiAgICB9LAoKICAgIC8vIOe8lui+kS3kv53lrZgKICAgIGRvRWRpdFNhdmUoKSB7CiAgICAgIHRoaXMuJHJlZnMuZWRpdEZvcm1SZWYudmFsaWRhdGUoYXN5bmMgdmFsaWQgPT4gewogICAgICAgIGlmICghdmFsaWQpIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBhd2FpdCBkb0VkaXRTYXZlKHRoaXMuZWRpdEZvcm0pCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKGRlZmF1bHRTZXR0aW5ncy5zdWNjZXNzRWRpdCkKICAgICAgICB0aGlzLnZpc2libGVDb25maWcuZWRpdCA9IGZhbHNlCiAgICAgICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgICAgIH0pCiAgICB9LAoKICAgIC8vIOe8lui+kS3lhbPpl60KICAgIGRvRWRpdENsb3NlKCkgewogICAgICB0aGlzLiRyZWZzLmVkaXRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["sysparams.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"sysparams.vue","sourceRoot":"src/views/system/sysparams","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 查询条件 -->\n    <el-card>\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"app-container-searchForm\">\n        <el-form-item label=\"参数中文名\">\n          <el-input v-model=\"searchForm.paramName\" placeholder=\"参数中文名\" />\n        </el-form-item>\n        <el-form-item label=\"参数英文名\">\n          <el-input v-model=\"searchForm.paramEnName\" placeholder=\"参数英文名\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"getPageList\">\n            {{ defaultSettings.btnSearch }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 数据列表 -->\n    <el-card>\n      <el-row class=\"app-container-toolbar\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-circle-plus-outline\"\n          @click=\"visibleConfig.add = true\"\n        >\n          {{ defaultSettings.btnAdd }}\n        </el-button>\n      </el-row>\n\n      <!-- 数据表格 -->\n      <el-table border :data=\"gridData.list\">\n        <el-table-column type=\"index\" label=\"序号\" width=\"50\" />\n        <el-table-column prop=\"paramName\" label=\"参数中文名\" />\n        <el-table-column prop=\"paramEnName\" label=\"参数英文名\" />\n        <el-table-column prop=\"paramValue\" label=\"参数值\" />\n        <el-table-column prop=\"paramDesc\" label=\"描述\" />\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-view\"\n              size=\"small\"\n              @click=\"visibleConfig.view =true, viewForm = scope.row\"\n            >\n              {{ defaultSettings.btnView }}\n            </el-button>\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-edit\"\n              size=\"small\"\n              @click=\"doEdit(scope.row.id)\"\n            >\n              {{ defaultSettings.btnEdit }}\n            </el-button>\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-delete\"\n              size=\"small\"\n              @click=\"doDelete(scope.row.id)\"\n            >{{ defaultSettings.btnDelete }}\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页区域 -->\n      <el-pagination\n        :current-page=\"searchForm.current\"\n        :layout=\"defaultSettings.page\"\n        :total=\"gridData.total\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </el-card>\n\n    <!-- 查看 -->\n    <el-dialog :title=\"defaultSettings.btnView\" :visible.sync=\"visibleConfig.view\" width=\"50%\">\n      <span>\n        <el-form :model=\"viewForm\" label-width=\"120px\" disabled>\n          <el-form-item label=\"参数中文名\" prop=\"paramName\">\n            <el-input v-model=\"viewForm.paramName\" />\n          </el-form-item>\n          <el-form-item label=\"参数英文名\" prop=\"paramEnName\">\n            <el-input v-model=\"viewForm.paramEnName\" />\n          </el-form-item>\n          <el-form-item label=\"参数值\" prop=\"paramValue\">\n            <el-input v-model=\"viewForm.paramValue\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" prop=\"paramDesc\">\n            <el-input v-model=\"viewForm.paramDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.view = false\"\n        >{{ defaultSettings.closeButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 添加 -->\n    <el-dialog\n      :title=\"defaultSettings.btnAdd\"\n      :visible.sync=\"visibleConfig.add\"\n      width=\"50%\"\n      @close=\"doAddClose\"\n    >\n      <span>\n        <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"参数中文名\" prop=\"paramName\">\n            <el-input v-model=\"addForm.paramName\" />\n          </el-form-item>\n          <el-form-item label=\"参数英文名\" prop=\"paramEnName\">\n            <el-input v-model=\"addForm.paramEnName\" />\n          </el-form-item>\n          <el-form-item label=\"参数值\" prop=\"paramValue\">\n            <el-input v-model=\"addForm.paramValue\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" prop=\"paramDesc\">\n            <el-input v-model=\"addForm.paramDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.add = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doAddSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑 -->\n    <el-dialog\n      :title=\"defaultSettings.btnEdit\"\n      :visible.sync=\"visibleConfig.edit\"\n      width=\"50%\"\n      @close=\"doEditClose\"\n    >\n      <span>\n        <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"参数中文名\" prop=\"paramName\">\n            <el-input v-model=\"editForm.paramName\" />\n          </el-form-item>\n          <el-form-item label=\"参数英文名\" prop=\"paramEnName\">\n            <el-input v-model=\"editForm.paramEnName\" />\n          </el-form-item>\n          <el-form-item label=\"参数值\" prop=\"paramValue\">\n            <el-input v-model=\"editForm.paramValue\" />\n          </el-form-item>\n          <el-form-item label=\"描述\" prop=\"paramDesc\">\n            <el-input v-model=\"editForm.paramDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.edit = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doEditSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport defaultSettings from '@/settings'\nimport {\n  doAddSave,\n  doDelete,\n  doEditSave,\n  doView,\n  getPageList\n} from '@/api/system/sysparams/SysParams'\nimport { isNumberAndSe } from '@/utils/validate'\n\nexport default {\n  name: 'SysParam',\n  data() {\n    return {\n      defaultSettings: defaultSettings,\n\n      // 查询参数对象\n      searchForm: {\n        current: 1,\n        paramName: '',\n        paramEnName: ''\n      },\n      // 列表数据\n      gridData: {\n        list: [],\n        total: 0\n      },\n\n      // 对话框是否展示配置\n      visibleConfig: {\n        add: false,\n        edit: false,\n        view: false\n      },\n\n      // 添加或编辑对话框校验规则\n      checkRules: {\n        paramName: [\n          { required: true, message: '请输入参数中文名', trigger: 'blur' },\n          { min: 1, max: 20, message: '请输入1-20个字符的参数中文名', trigger: 'blur' }],\n        paramEnName: [\n          { required: true, message: '请输入参数英文名', trigger: 'blur' },\n          { min: 1, max: 50, message: '请输入1-50个字符或数字', trigger: 'blur' },\n          { validator: isNumberAndSe, trigger: 'blur' }],\n        paramValue: [{ required: true, message: '请输入参数值', trigger: 'blur' }],\n        paramDesc: [{ max: 200, message: '描述不能超过200个字符', trigger: 'blur' }]\n      },\n\n      // 查看数据\n      viewForm: {},\n\n      // 添加对话框数据\n      addForm: {},\n\n      // 编辑对话框数据\n      editForm: {}\n    }\n  },\n  created() {\n    this.getPageList()\n  },\n  methods: {\n    // 列表查询\n    getPageList() {\n      getPageList(this.searchForm).then((res) => {\n        const { records, total } = res.data\n        this.gridData.list = records\n        this.gridData.total = total\n      }).catch(() => {\n        this.$message.error(defaultSettings.failureSearch)\n      })\n    },\n\n    // 分页栏页数改变监听\n    handleCurrentChange(newCurrent) {\n      this.searchForm.current = newCurrent\n      this.getPageList()\n    },\n\n    // 删除\n    doDelete(id) {\n      const rowId = id\n      this.$confirm(defaultSettings.deleteText, defaultSettings.typeInfoText, {\n        confirmButtonText: defaultSettings.confirmButtonText,\n        cancelButtonText: defaultSettings.cancelButtonText,\n        type: defaultSettings.typeWarning\n      }).then(\n        async() => {\n          doDelete(rowId).then(() => {\n            this.$message.success(defaultSettings.successDelete)\n            this.getPageList()\n          })\n        })\n    },\n\n    // 添加-保存\n    doAddSave() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doAddSave(this.addForm)\n        this.$message.success(defaultSettings.successAdd)\n        this.visibleConfig.add = false\n        this.getPageList()\n      })\n    },\n    // 添加-关闭\n    doAddClose() {\n      this.$refs.addFormRef.resetFields()\n    },\n\n    // 编辑\n    async doEdit(id) {\n      const res = await doView(id)\n      this.editForm = res.data\n      this.visibleConfig.edit = true\n    },\n\n    // 编辑-保存\n    doEditSave() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doEditSave(this.editForm)\n        this.$message.success(defaultSettings.successEdit)\n        this.visibleConfig.edit = false\n        this.getPageList()\n      })\n    },\n\n    // 编辑-关闭\n    doEditClose() {\n      this.$refs.editFormRef.resetFields()\n    }\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n\n</style>\n"]}]}