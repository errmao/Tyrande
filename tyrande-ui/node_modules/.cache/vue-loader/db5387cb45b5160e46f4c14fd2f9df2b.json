{"remainingRequest":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\other4\\Tyrande\\tyrande-ui\\src\\layout\\components\\Sidebar\\Item.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\other4\\Tyrande\\tyrande-ui\\src\\layout\\components\\Sidebar\\Item.vue","mtime":1597643615000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWVudUl0ZW0nLAogIGZ1bmN0aW9uYWw6IHRydWUsCiAgcHJvcHM6IHsKICAgIGljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0KICB9LAogIHJlbmRlcihoLCBjb250ZXh0KSB7CiAgICBjb25zdCB7IGljb24sIHRpdGxlIH0gPSBjb250ZXh0LnByb3BzCiAgICBjb25zdCB2bm9kZXMgPSBbXQogICAgaWYgKGljb24pIHsKICAgICAgaWYgKGljb24uaW5jbHVkZXMoJ2VsLWljb24nKSkgewogICAgICAgIHZub2Rlcy5wdXNoKDxpIGNsYXNzPXtbaWNvbiwgJ3N1Yi1lbC1pY29uJ119IC8+KQogICAgICB9IGVsc2UgewogICAgICAgIHZub2Rlcy5wdXNoKDxzdmctaWNvbiBpY29uLWNsYXNzPXtpY29ufSAvPikKICAgICAgfQogICAgfQogICAgaWYgKHRpdGxlKSB7CiAgICAgIHZub2Rlcy5wdXNoKDxzcGFuIHNsb3Q9J3RpdGxlJz57dGl0bGV9PC9zcGFuPikKICAgIH0KICAgIHJldHVybiB2bm9kZXMKICB9Cn0K"},{"version":3,"sources":["Item.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Item.vue","sourceRoot":"src/layout/components/Sidebar","sourcesContent":["<script>\nexport default {\n  name: 'MenuItem',\n  functional: true,\n  props: {\n    icon: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    }\n  },\n  render(h, context) {\n    const { icon, title } = context.props\n    const vnodes = []\n    if (icon) {\n      if (icon.includes('el-icon')) {\n        vnodes.push(<i class={[icon, 'sub-el-icon']} />)\n      } else {\n        vnodes.push(<svg-icon icon-class={icon} />)\n      }\n    }\n    if (title) {\n      vnodes.push(<span slot='title'>{title}</span>)\n    }\n    return vnodes\n  }\n}\n</script>\n\n<style scoped>\n.sub-el-icon {\n  color: currentColor;\n  width: 1em;\n  height: 1em;\n}\n</style>\n"]}]}