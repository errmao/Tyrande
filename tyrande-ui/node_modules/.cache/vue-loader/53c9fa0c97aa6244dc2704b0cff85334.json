{"remainingRequest":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysmenu\\sysmenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysmenu\\sysmenu.vue","mtime":1597643615000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkZWZhdWx0U2V0dGluZ3MgZnJvbSAnQC9zZXR0aW5ncycKaW1wb3J0IHsgZG9BZGRTYXZlLCBkb0RlbGV0ZSwgZG9FZGl0U2F2ZSwgZG9WaWV3LCBnZXRNZW51QnlMZXZlbCwgZ2V0UGFnZUxpc3QgfSBmcm9tICdAL2FwaS9zeXN0ZW0vc3lzbWVudS9TeXNNZW51JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTeXNNZW51JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVmYXVsdFNldHRpbmdzOiBkZWZhdWx0U2V0dGluZ3MsCgogICAgICAvLyDliJfooajmlbDmja4KICAgICAgZ3JpZERhdGE6IHsKICAgICAgICBsaXN0OiBbXQogICAgICB9LAoKICAgICAgLy8g5a+56K+d5qGG5piv5ZCm5bGV56S66YWN572uCiAgICAgIHZpc2libGVDb25maWc6IHsKICAgICAgICBhZGQ6IGZhbHNlLAogICAgICAgIGVkaXQ6IGZhbHNlLAogICAgICAgIHZpZXc6IGZhbHNlCiAgICAgIH0sCgogICAgICAvLyDmt7vliqDmiJbnvJbovpHlr7nor53moYbmoKHpqozop4TliJkKICAgICAgY2hlY2tSdWxlczogewogICAgICAgIG1lbnVOYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+iPnOWNleWQjeensOS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBtZW51TGV2ZWw6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6I+c5Y2V5bGC57qn5LiN6IO95Li656m6JywgdHJpZ2dlcjogJ2JsdXInIH1dLAogICAgICAgIHBpZDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfkuIrnuqfoj5zljZXkuI3og73kuLrnqbonLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgbWVudVVybDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfoj5zljZXot6/lvoTkuI3og73kuLrnqbonLCB0cmlnZ2VyOiAnYmx1cicgfV0KICAgICAgfSwKCiAgICAgIC8vIOafpeeci+aVsOaNrgogICAgICB2aWV3Rm9ybToge30sCgogICAgICAvLyDmt7vliqDlr7nor53moYbmlbDmja4KICAgICAgYWRkRm9ybToge30sCiAgICAgIGFkZFBpZERhdGE6IFtdLAoKICAgICAgLy8g57yW6L6R5a+56K+d5qGG5pWw5o2uCiAgICAgIGVkaXRGb3JtOiB7fSwKICAgICAgZWRpdFBpZERhdGE6IFtdLAoKICAgICAgdmlld1BpZERhdGE6IFtdCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy4kZ2V0RGljdChkZWZhdWx0U2V0dGluZ3MuZGljdC5tZW51TGV2ZWwpCiAgICB0aGlzLm1lbnVMZXZlbENoYW5nZUZvckFkZCgxKQogICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJfooajmn6Xor6IKICAgIGdldFBhZ2VMaXN0KCkgewogICAgICBnZXRQYWdlTGlzdCgpLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMuZ3JpZERhdGEubGlzdCA9IHJlcy5kYXRhCiAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGRlZmF1bHRTZXR0aW5ncy5mYWlsdXJlU2VhcmNoKQogICAgICB9KQogICAgfSwKCiAgICAvLyDliKDpmaQKICAgIGRvRGVsZXRlKGlkKSB7CiAgICAgIGNvbnN0IHJvd0lkID0gaWQKICAgICAgdGhpcy4kY29uZmlybShkZWZhdWx0U2V0dGluZ3MuZGVsZXRlVGV4dCwgZGVmYXVsdFNldHRpbmdzLnR5cGVJbmZvVGV4dCwgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiBkZWZhdWx0U2V0dGluZ3MuY29uZmlybUJ1dHRvblRleHQsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogZGVmYXVsdFNldHRpbmdzLmNhbmNlbEJ1dHRvblRleHQsCiAgICAgICAgdHlwZTogZGVmYXVsdFNldHRpbmdzLnR5cGVXYXJuaW5nCiAgICAgIH0pLnRoZW4oCiAgICAgICAgYXN5bmMoKSA9PiB7CiAgICAgICAgICBkb0RlbGV0ZShyb3dJZCkudGhlbigoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhkZWZhdWx0U2V0dGluZ3Muc3VjY2Vzc0RlbGV0ZSkKICAgICAgICAgICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICB9LAoKICAgIGFzeW5jIGRvVmlldyhpZCkgewogICAgICBjb25zdCByZXMgPSBhd2FpdCBkb1ZpZXcoaWQpCiAgICAgIGF3YWl0IHRoaXMubWVudUxldmVsQ2hhbmdlRm9yVmlldyhyZXMuZGF0YS5tZW51TGV2ZWwpCiAgICAgIHRoaXMudmlld0Zvcm0gPSByZXMuZGF0YQogICAgICB0aGlzLnZpZXdGb3JtLm1lbnVMZXZlbCA9IHRoaXMudmlld0Zvcm0ubWVudUxldmVsICsgJycKICAgICAgdGhpcy52aXNpYmxlQ29uZmlnLnZpZXcgPSB0cnVlCiAgICB9LAoKICAgIC8vIOa3u+WKoC3kv53lrZgKICAgIGRvQWRkU2F2ZSgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgYXdhaXQgZG9BZGRTYXZlKHRoaXMuYWRkRm9ybSkKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoZGVmYXVsdFNldHRpbmdzLnN1Y2Nlc3NBZGQpCiAgICAgICAgdGhpcy52aXNpYmxlQ29uZmlnLmFkZCA9IGZhbHNlCiAgICAgICAgdGhpcy5nZXRQYWdlTGlzdCgpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5re75YqgLeWFs+mXrQogICAgZG9BZGRDbG9zZSgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0sCgogICAgLy8g57yW6L6RCiAgICBhc3luYyBkb0VkaXQoaWQpIHsKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZG9WaWV3KGlkKQogICAgICBhd2FpdCB0aGlzLm1lbnVMZXZlbENoYW5nZUZvckVkaXQocmVzLmRhdGEubWVudUxldmVsKQogICAgICB0aGlzLmVkaXRGb3JtID0gcmVzLmRhdGEKICAgICAgdGhpcy5lZGl0Rm9ybS5tZW51TGV2ZWwgPSB0aGlzLmVkaXRGb3JtLm1lbnVMZXZlbCArICcnCiAgICAgIHRoaXMudmlzaWJsZUNvbmZpZy5lZGl0ID0gdHJ1ZQogICAgfSwKCiAgICAvLyDnvJbovpEt5L+d5a2YCiAgICBkb0VkaXRTYXZlKCkgewogICAgICB0aGlzLiRyZWZzLmVkaXRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsKICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgYXdhaXQgZG9FZGl0U2F2ZSh0aGlzLmVkaXRGb3JtKQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhkZWZhdWx0U2V0dGluZ3Muc3VjY2Vzc0VkaXQpCiAgICAgICAgdGhpcy52aXNpYmxlQ29uZmlnLmVkaXQgPSBmYWxzZQogICAgICAgIHRoaXMuZ2V0UGFnZUxpc3QoKQogICAgICB9KQogICAgfSwKCiAgICAvLyDnvJbovpEt5YWz6ZetCiAgICBkb0VkaXRDbG9zZSgpIHsKICAgICAgdGhpcy4kcmVmcy5lZGl0Rm9ybVJlZi5yZXNldEZpZWxkcygpCiAgICB9LAogICAgZm9ybWF0TWVudUxldmVsKGNlbGxWYWx1ZSkgewogICAgICByZXR1cm4gdGhpcy4kZm9ybWF0RGljdChjZWxsVmFsdWUsIGRlZmF1bHRTZXR0aW5ncy5kaWN0Lm1lbnVMZXZlbCkKICAgIH0sCgogICAgLy8g5paw5aKe5a+56K+d5qGG6I+c5Y2V5bGC57qn5LqL5Lu2CiAgICBhc3luYyBtZW51TGV2ZWxDaGFuZ2VGb3JBZGQobmV3VmFsdWUpIHsKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXRNZW51QnlMZXZlbChuZXdWYWx1ZSkKICAgICAgdGhpcy5hZGRQaWREYXRhID0gZGF0YQogICAgICB0aGlzLmFkZEZvcm0ucGlkID0gbnVsbAogICAgfSwKCiAgICBhc3luYyBtZW51TGV2ZWxDaGFuZ2VGb3JFZGl0KG5ld1ZhbHVlKSB7CiAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0TWVudUJ5TGV2ZWwobmV3VmFsdWUpCiAgICAgIHRoaXMuZWRpdFBpZERhdGEgPSBkYXRhCiAgICAgIHRoaXMuZWRpdEZvcm0ucGlkID0gbnVsbAogICAgfSwKICAgIGFzeW5jIG1lbnVMZXZlbENoYW5nZUZvclZpZXcobmV3VmFsdWUpIHsKICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBnZXRNZW51QnlMZXZlbChuZXdWYWx1ZSkKICAgICAgdGhpcy52aWV3UGlkRGF0YSA9IGRhdGEKICAgIH0KCiAgfQp9Cg=="},{"version":3,"sources":["sysmenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"sysmenu.vue","sourceRoot":"src/views/system/sysmenu","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 数据列表 -->\n    <el-card>\n      <el-row class=\"app-container-toolbar\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-circle-plus-outline\"\n          @click=\"visibleConfig.add = true\"\n        >\n          {{ defaultSettings.btnAdd }}\n        </el-button>\n      </el-row>\n\n      <!-- 数据表格 -->\n      <el-table\n        border\n        :data=\"gridData.list\"\n        row-key=\"id\"\n        :tree-props=\"{children: 'sub'}\"\n      >\n        <el-table-column prop=\"id\" label=\"菜单编号\" />\n        <el-table-column prop=\"menuName\" label=\"菜单名称\" />\n        <el-table-column prop=\"menuLevel\" label=\"菜单层级\">\n          <template slot-scope=\"scope\">\n            <el-tag\n              plain\n              size=\"mini\"\n              :type=\"(scope.row.menuLevel=='1' ? 'success' : (scope.row.menuLevel=='2'? 'warning': scope.row.menuLevel=='3'?'danger':'info'))\"\n            >\n              {{ formatMenuLevel(scope.row.menuLevel) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"menuUrl\" label=\"请求路径\" />\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-view\"\n              size=\"small\"\n              @click=\"doView(scope.row.id)\"\n            >\n              {{ defaultSettings.btnView }}\n            </el-button>\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-edit\"\n              size=\"small\"\n              @click=\"doEdit(scope.row.id)\"\n            >\n              {{ defaultSettings.btnEdit }}\n            </el-button>\n            <el-button\n              type=\"text\"\n              icon=\"el-icon-delete\"\n              size=\"small\"\n              @click=\"doDelete(scope.row.id)\"\n            >{{ defaultSettings.btnDelete }}\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 查看 -->\n    <el-dialog :title=\"defaultSettings.btnView\" :visible.sync=\"visibleConfig.view\" width=\"50%\">\n      <span>\n        <el-form :model=\"viewForm\" label-width=\"120px\" disabled>\n          <el-form-item label=\"菜单名称\">\n            <el-input v-model=\"viewForm.menuName\" />\n          </el-form-item>\n          <el-form-item label=\"菜单层级\" prop=\"menuLevel\">\n            <el-select v-model=\"viewForm.menuLevel\">\n              <option-dict :dict=\"defaultSettings.dict.menuLevel\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"上级菜单\" prop=\"pid\">\n            <el-cascader\n              :key=\"viewForm.id\"\n              v-model=\"viewForm.pid\"\n              :options=\"viewPidData\"\n              :props=\"{\n                emitPath:false,\n                expandTrigger: 'hover',\n                children:'sub',\n                label:'menuName',\n                value:'id'}\"\n            />\n          </el-form-item>\n          <el-form-item label=\"请求路径\">\n            <el-input v-model=\"viewForm.menuUrl\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"visibleConfig.view = false\">{{ defaultSettings.closeButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 添加 -->\n    <el-dialog\n      :title=\"defaultSettings.btnAdd\"\n      :visible.sync=\"visibleConfig.add\"\n      width=\"50%\"\n      @close=\"doAddClose\"\n    >\n      <span>\n        <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"菜单名称\" prop=\"menuName\">\n            <el-input v-model=\"addForm.menuName\" />\n          </el-form-item>\n          <el-form-item label=\"菜单层级\" prop=\"menuLevel\">\n            <el-select v-model=\"addForm.menuLevel\" @change=\"menuLevelChangeForAdd\">\n              <option-dict :dict=\"defaultSettings.dict.menuLevel\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"上级菜单\" prop=\"pid\">\n            <el-cascader\n              :key=\"addForm.pid\"\n              v-model=\"addForm.pid\"\n              :options=\"addPidData\"\n              :props=\"{\n                emitPath:false,\n                expandTrigger: 'hover',\n                children:'sub',\n                label:'menuName',\n                value:'id'}\"\n            />\n          </el-form-item>\n          <el-form-item label=\"请求路径\" prop=\"menuUrl\">\n            <el-input v-model=\"addForm.menuUrl\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.add = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doAddSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑 -->\n    <el-dialog\n      :title=\"defaultSettings.btnEdit\"\n      :visible.sync=\"visibleConfig.edit\"\n      width=\"50%\"\n      @close=\"doEditClose\"\n    >\n      <span>\n        <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"菜单名称\" prop=\"menuName\">\n            <el-input v-model=\"editForm.menuName\" />\n          </el-form-item>\n          <el-form-item label=\"菜单层级\" prop=\"menuLevel\">\n            <el-select v-model=\"editForm.menuLevel\" @change=\"menuLevelChangeForEdit\">\n              <option-dict :dict=\"defaultSettings.dict.menuLevel\" />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"上级菜单\" prop=\"pid\">\n            <el-cascader\n              :key=\"editForm.id\"\n              v-model=\"editForm.pid\"\n              :options=\"editPidData\"\n              :props=\"{\n                emitPath:false,\n                expandTrigger: 'hover',\n                children:'sub',\n                label:'menuName',\n                value:'id'}\"\n            />\n          </el-form-item>\n          <el-form-item label=\"请求路径\" prop=\"menuUrl\">\n            <el-input v-model=\"editForm.menuUrl\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.edit = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doEditSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport defaultSettings from '@/settings'\nimport { doAddSave, doDelete, doEditSave, doView, getMenuByLevel, getPageList } from '@/api/system/sysmenu/SysMenu'\n\nexport default {\n  name: 'SysMenu',\n  data() {\n    return {\n      defaultSettings: defaultSettings,\n\n      // 列表数据\n      gridData: {\n        list: []\n      },\n\n      // 对话框是否展示配置\n      visibleConfig: {\n        add: false,\n        edit: false,\n        view: false\n      },\n\n      // 添加或编辑对话框校验规则\n      checkRules: {\n        menuName: [{ required: true, message: '菜单名称不能为空', trigger: 'blur' }],\n        menuLevel: [{ required: true, message: '菜单层级不能为空', trigger: 'blur' }],\n        pid: [{ required: true, message: '上级菜单不能为空', trigger: 'blur' }],\n        menuUrl: [{ required: true, message: '菜单路径不能为空', trigger: 'blur' }]\n      },\n\n      // 查看数据\n      viewForm: {},\n\n      // 添加对话框数据\n      addForm: {},\n      addPidData: [],\n\n      // 编辑对话框数据\n      editForm: {},\n      editPidData: [],\n\n      viewPidData: []\n    }\n  },\n  created() {\n    this.$getDict(defaultSettings.dict.menuLevel)\n    this.menuLevelChangeForAdd(1)\n    this.getPageList()\n  },\n  methods: {\n    // 列表查询\n    getPageList() {\n      getPageList().then((res) => {\n        this.gridData.list = res.data\n      }).catch(() => {\n        this.$message.error(defaultSettings.failureSearch)\n      })\n    },\n\n    // 删除\n    doDelete(id) {\n      const rowId = id\n      this.$confirm(defaultSettings.deleteText, defaultSettings.typeInfoText, {\n        confirmButtonText: defaultSettings.confirmButtonText,\n        cancelButtonText: defaultSettings.cancelButtonText,\n        type: defaultSettings.typeWarning\n      }).then(\n        async() => {\n          doDelete(rowId).then(() => {\n            this.$message.success(defaultSettings.successDelete)\n            this.getPageList()\n          })\n        })\n    },\n\n    async doView(id) {\n      const res = await doView(id)\n      await this.menuLevelChangeForView(res.data.menuLevel)\n      this.viewForm = res.data\n      this.viewForm.menuLevel = this.viewForm.menuLevel + ''\n      this.visibleConfig.view = true\n    },\n\n    // 添加-保存\n    doAddSave() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doAddSave(this.addForm)\n        this.$message.success(defaultSettings.successAdd)\n        this.visibleConfig.add = false\n        this.getPageList()\n      })\n    },\n    // 添加-关闭\n    doAddClose() {\n      this.$refs.addFormRef.resetFields()\n    },\n\n    // 编辑\n    async doEdit(id) {\n      const res = await doView(id)\n      await this.menuLevelChangeForEdit(res.data.menuLevel)\n      this.editForm = res.data\n      this.editForm.menuLevel = this.editForm.menuLevel + ''\n      this.visibleConfig.edit = true\n    },\n\n    // 编辑-保存\n    doEditSave() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doEditSave(this.editForm)\n        this.$message.success(defaultSettings.successEdit)\n        this.visibleConfig.edit = false\n        this.getPageList()\n      })\n    },\n\n    // 编辑-关闭\n    doEditClose() {\n      this.$refs.editFormRef.resetFields()\n    },\n    formatMenuLevel(cellValue) {\n      return this.$formatDict(cellValue, defaultSettings.dict.menuLevel)\n    },\n\n    // 新增对话框菜单层级事件\n    async menuLevelChangeForAdd(newValue) {\n      const { data } = await getMenuByLevel(newValue)\n      this.addPidData = data\n      this.addForm.pid = null\n    },\n\n    async menuLevelChangeForEdit(newValue) {\n      const { data } = await getMenuByLevel(newValue)\n      this.editPidData = data\n      this.editForm.pid = null\n    },\n    async menuLevelChangeForView(newValue) {\n      const { data } = await getMenuByLevel(newValue)\n      this.viewPidData = data\n    }\n\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n\n</style>\n"]}]}