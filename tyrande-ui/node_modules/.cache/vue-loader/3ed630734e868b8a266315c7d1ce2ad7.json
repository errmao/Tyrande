{"remainingRequest":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysrole\\sysrole.vue?vue&type=style&index=0&id=68902ab1&lang=scss&scoped=true&","dependencies":[{"path":"D:\\other4\\Tyrande\\tyrande-ui\\src\\views\\system\\sysrole\\sysrole.vue","mtime":1597643615000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\other4\\Tyrande\\tyrande-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJvbGVfbWVudV9yb2xlX2NsYXNzIHsKICBtYXJnaW4tcmlnaHQ6IC01cHg7Cn0KCi5yb2xlX21lbnVfbWVudV9jbGFzcyB7CiAgbWFyZ2luLWxlZnQ6IC01cHg7CiAgbWF4LWhlaWdodDogNzgwcHg7CiAgb3ZlcmZsb3cteTogYXV0bzsKICAudHJlZS1jbGFzcyB7CiAgICAgID4uZWwtdHJlZXsKICAgICAgICA+LmVsLXRyZWUtbm9kZXsKICAgICAgICAgIC8q6K6+572u5qiq5ZCR5rua5Yqo5p2hKi8KICAgICAgICAgIG1pbi13aWR0aDogMTAwJTsKICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgIC8q6K6+572u5qC56IqC54K56ZqQ6JePKi8KICAgICAgICAgID4uZWwtdHJlZS1ub2RlX19jb250ZW50ewogICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogIH0KfQo="},{"version":3,"sources":["sysrole.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0XA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sysrole.vue","sourceRoot":"src/views/system/sysrole","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 查询条件 -->\n    <el-card>\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"app-container-searchForm\">\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"searchForm.roleName\" placeholder=\"角色名称\" />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"getPageList\">\n            {{ defaultSettings.btnSearch }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <el-row :gutter=\"20\">\n      <!-- 字典项表格 -->\n      <el-col :span=\"11\">\n        <!-- 数据列表 -->\n        <el-card class=\"role_menu_role_class\">\n          <el-row class=\"app-container-toolbar\">\n            <el-button\n              type=\"primary\"\n              icon=\"el-icon-circle-plus-outline\"\n              @click=\"visibleConfig.add = true\"\n            >\n              {{ defaultSettings.btnAdd }}\n            </el-button>\n          </el-row>\n\n          <!-- 数据表格 -->\n          <el-table border :data=\"gridData.list\" highlight-current-row @current-change=\"roleRowChangeClick\">\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\" />\n            <el-table-column prop=\"roleName\" label=\"角色名称\" />\n            <el-table-column prop=\"roleDesc\" label=\"角色描述\" />\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  type=\"text\"\n                  icon=\"el-icon-view\"\n                  size=\"small\"\n                  @click=\"visibleConfig.view =true, viewForm = scope.row\"\n                >\n                  {{ defaultSettings.btnView }}\n                </el-button>\n                <el-button\n                  type=\"text\"\n                  icon=\"el-icon-edit\"\n                  size=\"small\"\n                  @click=\"doEdit(scope.row.id)\"\n                >\n                  {{ defaultSettings.btnEdit }}\n                </el-button>\n                <el-button\n                  type=\"text\"\n                  icon=\"el-icon-delete\"\n                  size=\"small\"\n                  @click=\"doDelete(scope.row.id)\"\n                >{{ defaultSettings.btnDelete }}\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n\n          <!-- 分页区域 -->\n          <el-pagination\n            :current-page=\"searchForm.current\"\n            :layout=\"defaultSettings.page\"\n            :total=\"gridData.total\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </el-card>\n      </el-col>\n\n      <!-- 分配菜单区域 -->\n      <el-col :span=\"13\">\n        <el-card class=\"role_menu_menu_class\">\n          <el-row class=\"app-container-toolbar\">\n            <div class=\"tool-btn-three\">\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-sunny\"\n                @click=\"saveRoleMenu\"\n              >\n                {{ defaultSettings.btnSave }}\n              </el-button>\n            </div>\n          </el-row>\n          <div class=\"tree-class\">\n            <el-tree\n              ref=\"menuTreeRef\"\n              :data=\"treeData\"\n              node-key=\"id\"\n              default-expand-all\n              :default-checked-keys=\"select.menu\"\n              :props=\"props\"\n              check-strictly\n              show-checkbox\n            />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 查看 -->\n    <el-dialog :title=\"defaultSettings.btnView\" :visible.sync=\"visibleConfig.view\" width=\"50%\">\n      <span>\n        <el-form :model=\"viewForm\" label-width=\"120px\" disabled>\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\n            <el-input v-model=\"viewForm.roleName\" />\n          </el-form-item>\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n            <el-input v-model=\"viewForm.roleDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"visibleConfig.view = false\">{{ defaultSettings.closeButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 添加 -->\n    <el-dialog\n      :title=\"defaultSettings.btnAdd\"\n      :visible.sync=\"visibleConfig.add\"\n      width=\"50%\"\n      @close=\"doAddClose\"\n    >\n      <span>\n        <el-form ref=\"addFormRef\" :model=\"addForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\n            <el-input v-model=\"addForm.roleName\" />\n          </el-form-item>\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n            <el-input v-model=\"addForm.roleDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.add = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doAddSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 编辑 -->\n    <el-dialog\n      :title=\"defaultSettings.btnEdit\"\n      :visible.sync=\"visibleConfig.edit\"\n      width=\"50%\"\n      @close=\"doEditClose\"\n    >\n      <span>\n        <el-form ref=\"editFormRef\" :model=\"editForm\" :rules=\"checkRules\" label-width=\"120px\">\n          <el-form-item label=\"角色名称\" prop=\"roleName\">\n            <el-input v-model=\"editForm.roleName\" />\n          </el-form-item>\n          <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n            <el-input v-model=\"editForm.roleDesc\" />\n          </el-form-item>\n        </el-form>\n      </span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          @click=\"visibleConfig.edit = false\"\n        >{{ defaultSettings.cancelButtonText }}</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doEditSave\"\n        >{{ defaultSettings.confirmButtonText }}</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport defaultSettings from '@/settings'\nimport {\n  doAddSave,\n  doDelete,\n  doEditSave,\n  doView,\n  getPageList,\n  getRoleMenu,\n  saveRoleMenu\n} from '@/api/system/sysrole/SysRole'\nimport {\n  getPageList as getMenuTree\n} from '@/api/system/sysmenu/SysMenu'\n\nexport default {\n  name: 'SysRole',\n  data() {\n    return {\n      defaultSettings: defaultSettings,\n\n      // 查询参数对象\n      searchForm: {\n        current: 1\n      },\n      // 列表数据\n      gridData: {\n        list: [],\n        total: 0\n      },\n\n      // 对话框是否展示配置\n      visibleConfig: {\n        add: false,\n        edit: false,\n        view: false\n      },\n\n      // 添加或编辑对话框校验规则\n      checkRules: {\n        roleName: [{ required: true, message: '请输入角色名称', trigger: 'blur' }],\n        roleDesc: [{ required: true, message: '请输入角色描述', trigger: 'blur' }]\n      },\n\n      // 查看数据\n      viewForm: {},\n\n      // 添加对话框数据\n      addForm: {},\n\n      // 编辑对话框数据\n      editForm: {},\n\n      /**\n       * 菜单树配置\n       */\n      props: {\n        label: 'menuName',\n        children: 'sub'\n      },\n      treeData: [],\n      // 选中的角色\n      select: {\n        menu: [],\n        role: null\n      }\n    }\n  },\n  created() {\n    this.getPageList()\n    this.initMenuTree()\n  },\n  methods: {\n    // 列表查询\n    getPageList() {\n      getPageList(this.searchForm).then((res) => {\n        const { records, total } = res.data\n        this.gridData.list = records\n        this.gridData.total = total\n      }).catch(() => {\n        this.$message.error(defaultSettings.failureSearch)\n      })\n    },\n\n    // 分页栏页数改变监听\n    handleCurrentChange(newCurrent) {\n      this.searchForm.current = newCurrent\n      this.getPageList()\n    },\n\n    // 删除\n    doDelete(id) {\n      const rowId = id\n      this.$confirm(defaultSettings.deleteText, defaultSettings.typeInfoText, {\n        confirmButtonText: defaultSettings.confirmButtonText,\n        cancelButtonText: defaultSettings.cancelButtonText,\n        type: defaultSettings.typeWarning\n      }).then(\n        async() => {\n          doDelete(rowId).then(() => {\n            this.$message.success(defaultSettings.successDelete)\n            this.getPageList()\n          })\n        })\n    },\n\n    // 添加-保存\n    doAddSave() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doAddSave(this.addForm)\n        this.$message.success(defaultSettings.successAdd)\n        this.visibleConfig.add = false\n        this.getPageList()\n      })\n    },\n    // 添加-关闭\n    doAddClose() {\n      this.$refs.addFormRef.resetFields()\n    },\n\n    // 编辑\n    async doEdit(id) {\n      const res = await doView(id)\n      this.editForm = res.data\n      this.visibleConfig.edit = true\n    },\n\n    // 编辑-保存\n    doEditSave() {\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) {\n          return\n        }\n        await doEditSave(this.editForm)\n        this.$message.success(defaultSettings.successEdit)\n        this.visibleConfig.edit = false\n        this.getPageList()\n      })\n    },\n\n    // 编辑-关闭\n    doEditClose() {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 角色表格行点击事件\n    async roleRowChangeClick(currentRow) {\n      // 重置右侧菜单面板\n      this.select.menu = []\n      await this.initMenuTree()\n      // 查询需要勾选的\n      if (currentRow == null) {\n        this.select.role = null\n      } else {\n        // 有选中的角色\n        this.select.role = currentRow\n        // 查询角色拥有的菜单\n        const { data } = await getRoleMenu(currentRow.id)\n        if (Object.keys(data).length !== 0) {\n          this.select.menu = data\n        }\n      }\n    },\n\n    /**\n     * 菜单树配置\n     */\n    // 初始化菜单树数据\n    async initMenuTree() {\n      const res = await getMenuTree()\n      this.treeData = res.data\n    },\n\n    // 保存角色权限关联\n    async saveRoleMenu() {\n      // 判读是否选择角色\n      if (this.select.role == null) {\n        this.$message.error('请选择角色')\n      }\n      // 获取选中菜单权限\n      const selectArr = this.$refs.menuTreeRef.getCheckedKeys()\n      const data = {\n        role: this.select.role.id,\n        menu: selectArr\n      }\n      await saveRoleMenu(data).then(() => {\n        this.$message.success(defaultSettings.successSave)\n      })\n    }\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n\n  .role_menu_role_class {\n    margin-right: -5px;\n  }\n\n  .role_menu_menu_class {\n    margin-left: -5px;\n    max-height: 780px;\n    overflow-y: auto;\n    .tree-class {\n        >.el-tree{\n          >.el-tree-node{\n            /*设置横向滚动条*/\n            min-width: 100%;\n            display: inline-block;\n            /*设置根节点隐藏*/\n            >.el-tree-node__content{\n              display: none;\n            }\n          }\n        }\n    }\n  }\n</style>\n"]}]}